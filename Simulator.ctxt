#BlueJ class context
comment0.target=Simulator
comment0.text=\r\n\ A\ simple\ predator-prey\ simulator,\ based\ on\ a\ rectangular\ field\r\n\ containing\ zebras,\ deers\ and\ lions,\ bears,\ tigers.\r\n\ \r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00F6lling\r\n\ @version\ 2016.02.29\ (2)\r\n
comment1.params=
comment1.target=Simulator()
comment1.text=\r\n\ Construct\ a\ simulation\ field\ with\ default\ size.\r\n
comment10.params=
comment10.target=void\ populate()
comment10.text=\r\n\ Randomly\ populate\ the\ field\ with\ Tigers,\ Lions,\ Bears,\ and\ Zebras\ and\ Deers.\ Also\ populates\ Grass\r\n
comment11.params=
comment11.target=int\ getTime()
comment11.text=\r\n\ Get\ current\ time\ of\ day.\r\n\ @return\ int\ time\ \ The\ time\ of\ day\ for\ the\ simulation\r\n\ \ \ \ \ \ This\ is\ a\ number\ between\ 0\ and\ 23.\r\n
comment12.params=
comment12.target=int\ getSeason()
comment12.text=\r\n\ Get\ current\ season\ of\ Simulator.\r\n\ @return\ int\ season\ \ The\ number\ representing\ each\ season\ of\ the\ year.\r\n\ \ This\ is\ a\ number\ between\ 0\ and\ 3.\ 0\ is\ Spring,\ 1\ is\ Summer,\ 2\ is\ Autumn\ &\ 3\ is\ Winter.\r\n
comment13.params=
comment13.target=void\ setRain()
comment13.text=\r\n\ Sets\ value\ for\ rain.\r\n
comment14.params=
comment14.target=boolean\ getRain()
comment14.text=\r\n\ Returns\ whether\ or\ not\ it's\ raining.\r\n\ @return\ boolean\ \ True\ if\ rain\ value\ is\ greater\ than\ or\ equal\ to\ 0.75.\r\n
comment15.params=
comment15.target=boolean\ rainedThisSeason()
comment15.text=\r\n\ Returns\ true\ if\ it\ has\ rained\ during\ the\ current\ season.\r\n\ @return\ boolean\ \ True\ if\ it\ has\ recently\ rained.\r\n
comment16.params=millisec
comment16.target=void\ delay(int)
comment16.text=\r\n\ Pause\ for\ a\ given\ time.\r\n\ @param\ millisec\ \ The\ time\ to\ pause\ for,\ in\ milliseconds\r\n
comment2.params=depth\ width
comment2.target=Simulator(int,\ int)
comment2.text=\r\n\ Create\ a\ simulation\ field\ with\ the\ given\ size.\r\n\ @param\ depth\ Depth\ of\ the\ field.\ Must\ be\ greater\ than\ zero.\r\n\ @param\ width\ Width\ of\ the\ field.\ Must\ be\ greater\ than\ zero.\r\n
comment3.params=
comment3.target=void\ runLongSimulation()
comment3.text=\r\n\ Run\ the\ simulation\ from\ its\ current\ state\ for\ a\ reasonably\ long\ period,\r\n\ (1000\ steps).\r\n
comment4.params=numSteps
comment4.target=void\ simulate(int)
comment4.text=\r\n\ Run\ the\ simulation\ from\ its\ current\ state\ for\ the\ given\ number\ of\ steps.\r\n\ Stop\ before\ the\ given\ number\ of\ steps\ if\ it\ ceases\ to\ be\ viable.\r\n\ @param\ numSteps\ The\ number\ of\ steps\ to\ run\ for.\r\n
comment5.params=
comment5.target=void\ simulateOneStep()
comment5.text=\r\n\ Run\ the\ simulation\ from\ its\ current\ state\ for\ a\ single\ step.\r\n\ Iterate\ over\ the\ whole\ field\ updating\ the\ state\ of\ each\r\n\ Tiger,\ Lion,\ Bear\ and\ Zebra\ and\ Deer.\r\n\ This\ method\ also\ tracks\ the\ time\ and\ season,\ and\ runs\ processing\ for\ weather.\r\n
comment6.params=
comment6.target=void\ pause()
comment6.text=\r\n\ Pauses\ the\ Simulation.\r\n
comment7.params=
comment7.target=void\ quit()
comment7.text=\r\n\ Quits\ the\ simulation.\r\n
comment8.params=
comment8.target=void\ reset()
comment8.text=\r\n\ Reset\ the\ simulation\ to\ a\ starting\ position.\r\n
comment9.params=
comment9.target=void\ populateGrass()
comment9.text=\r\n\ Method\ allowing\ grass\ to\ repopulate\ when\ its\ population\ goes\ below\ a\ certain\ level.\r\n\ Code\ is\ similar\ to\ that\ in\ populate()\ method,\ but\ breaks\ once\ there\ are\ more\ than\ 100\ plants.\r\n
numComments=17
